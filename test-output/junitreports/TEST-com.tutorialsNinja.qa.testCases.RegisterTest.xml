<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LAPTOP-C2Q8BJ3N" failures="1" tests="12" name="com.tutorialsNinja.qa.testCases.RegisterTest" time="116.236" errors="0" timestamp="2024-10-14T09:25:03 IST" skipped="8">
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByProvidingAnInvalidEmailAddressIntoEmailField" time="39.219"/>
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByProvidingAnInvalidPhoneNumber" time="28.771">
    <failure message="did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1581)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2197)
at org.testng.Assert.assertNotEquals(Assert.java:2219)
at com.tutorialsNinja.qa.testCases.RegisterTest.verifyRegisteringAnAccountByProvidingAnInvalidPhoneNumber(RegisterTest.java:240)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingAnInvalidPhoneNumber -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByUsingKeyboardKeys" time="24.750"/>
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyAllFieldsIntheRegisterAccountPageHaveProperPlaceholders" time="23.496"/>
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterField">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterField -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByEnteringDifferentPasswordsIntoPasswordAndPasswordConfirmField">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountByEnteringDifferentPasswordsIntoPasswordAndPasswordConfirmField -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByProvidingExistingAccountDetails">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingExistingAccountDetails -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterField">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterField -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountWithoutProvidingAnyDetails">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountWithoutProvidingAnyDetails -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyDifferentWaysOfNavigatingToRegisterAccountPage">
    <skipped/>
  </testcase> <!-- verifyDifferentWaysOfNavigatingToRegisterAccountPage -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByProvidingAllFields">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingAllFields -->
  <system-out/>
  <testcase classname="com.tutorialsNinja.qa.testCases.RegisterTest" name="verifyRegisteringAnAccountByProvidingOnlyMandatoryFields">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingOnlyMandatoryFields -->
  <system-out/>
</testsuite> <!-- com.tutorialsNinja.qa.testCases.RegisterTest -->
